@model IEnumerable<TimeSheet2017.Models.TimeLog>

@{
    ViewBag.Title = "AssociateView";
}
@{
    //Find the work week beginning and end days based on todays date Monday through Sunday
    DateTime input = DateTime.Today;
    int delta = DayOfWeek.Monday - input.DayOfWeek;
    DateTime StartDay = input.AddDays(delta - 1);
    DateTime EndDay = StartDay.AddDays(6);
    //Format to be pretty and useful
    var PayWeekStartDay = StartDay.ToString("d");
    var PayWeekEndDay = EndDay.ToString("d");



}
<h2>My Time Sheet: </h2>
Period: @PayWeekStartDay to @PayWeekEndDay  - Hours must be turned in prior to midnight on the final day of the pay period.
<br />
<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.WorkDate)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Clients.CompanyName)
        </th>

        <th>
            @Html.DisplayNameFor(model => model.NumberHours)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.WorkType)
        </th>
        <th></th>
    </tr>
    @foreach (var item in Model)
    {
        DateTime DateOfWork = item.WorkDate; // get the log entry work date
        if (item.AssociateName == ViewBag.AssociateName && DateOfWork >= StartDay.Date && DateOfWork <= EndDay.Date)
        {
            <tr style="background-color: #fcf8e4; border: thin;">
                <td>
                    @Html.DisplayFor(modelItem => item.WorkDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Clients.CompanyName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.NumberHours)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.WorkType)
                </td>
                <td>
                    @Html.ActionLink("Edit", "Edit", new { id = item.LogID }) |
                    @Html.ActionLink("Details", "Details", new { id = item.LogID }) |
                    @Html.ActionLink("Delete", "Delete", new { id = item.LogID })
                </td>
            </tr>
        }
    }
</table>
<div style="background-color: #fcf8e4; border:thin;">
    @Html.ActionLink("Enter Hours Here", "Create")
    <br /><br />
</div>
<br /> <br />
<hr />
<div style="background-color: #fafafe; border:thin;">
    <a hrerf="#">Submitted hours from previous pay periods</a>
    <br />
</div>

<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.WorkDate)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Clients.CompanyName)
        </th>

        <th>
            @Html.DisplayNameFor(model => model.NumberHours)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.WorkType)
        </th>
    </tr>
    @foreach (var item in Model)
    {
        DateTime DateOfWork = item.WorkDate; // get the log entry work date
        if (item.AssociateName == ViewBag.AssociateName && DateOfWork < StartDay.Date)
        {
            <tr style="background-color: #fafafe; border: thin;">
                <td>
                    @Html.DisplayFor(modelItem => item.WorkDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Clients.CompanyName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.NumberHours)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.WorkType)
                </td>
            </tr>
        }
    }
</table>

<div>
        @Html.ActionLink("Enter Hours", "Create")

</div>